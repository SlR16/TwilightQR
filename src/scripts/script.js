function generateQRCode() {
    let ssid = document.getElementById("ssid").value;
    let password = document.getElementById("password").value;
    let encryption = document.getElementById("encryption").value;
    let hidden = document.getElementById("hidden").checked ? "true" : "false";

    if (!ssid) {
        alert("Please enter an SSID (Wi-Fi Name).");
        return;
    }

    let wifiString = `WIFI:S:${ssid};T:${encryption};P:${password};H:${hidden};;`;

    // Get the container for the QR code
    let qrcodeContainer = document.getElementById("qrcode");

    // Ensure the container exists
    if (!qrcodeContainer) {
        console.error("QR code container not found.");
        return;
    }

    // Clear previous QR code
    qrcodeContainer.innerHTML = "";

    // Generate QR code using the QRCode library (this will generate the canvas automatically)
    let qrCode = new QRCode(qrcodeContainer, {
        text: wifiString,
        width: 200,
        height: 200,
        colorDark: "#000000",
        colorLight: "#ffffff",
        correctLevel: QRCode.CorrectLevel.H
    });

    // Once the QR code is generated, let's start animating the drawing
    setTimeout(() => {
        // Get the canvas element generated by QRCode
        let canvas = qrcodeContainer.querySelector("canvas");
        let context = canvas.getContext("2d");

        // Get the image data of the QR code
        let imageData = context.getImageData(0, 0, canvas.width, canvas.height);
        let data = imageData.data;
        
        // Initialize pixel index
        let pixelIndex = 0;

        // Start animation
        let interval = setInterval(() => {
            for (let i = pixelIndex; i < pixelIndex + 1000 && i < data.length; i += 4) {
                let x = (i / 4) % canvas.width;
                let y = Math.floor(i / 4 / canvas.width);

                context.fillStyle = `rgb(${data[i]}, ${data[i + 1]}, ${data[i + 2]})`;
                context.fillRect(x, y, 1, 1);
            }

            pixelIndex += 1000;

            // Stop animation when all pixels are drawn
            if (pixelIndex >= data.length) {
                clearInterval(interval);
            }
        }, 10); // Change this value to adjust animation speed (in milliseconds)
    }, 100); // Delay to ensure the QR code is generated before animation starts
}




function downloadQRCode(format) {
    let canvas = document.querySelector("#qrcode canvas");
    
    if (!canvas) {
        alert("Please generate a QR code first!");
        return;
    }

    let link = document.createElement("a");
    let fileName = `wifi_qr_code.${format}`;

    if (format === "png" || format === "jpg") {
        link.href = canvas.toDataURL(`image/${format}`);
        link.download = fileName;
    } else if (format === "svg") {
        let svg = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">
                        <image href="${canvas.toDataURL()}" width="200" height="200"/>
                   </svg>`;
        let blob = new Blob([svg], { type: "image/svg+xml" });
        link.href = URL.createObjectURL(blob);
        link.download = fileName;
    }

    link.click();
}
